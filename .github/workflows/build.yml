name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: windows-latest
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
      COVERAGE_RESULTS: coverage_results # Directory where coverage results will be placed
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up msbuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@v1

      - name: Install OpenCppCoverage
        run: |
          curl -L https://github.com/OpenCppCoverage/OpenCppCoverage/releases/download/release-0.9.9.0/OpenCppCoverageSetup-x64-0.9.9.0.exe -o OpenCppCoverageSetup.exe
          .\OpenCppCoverageSetup.exe /SUPRESSMSGBOXES /NORESTART -NoNewWindow -Wait

      - name: Run build-wrapper
        run: |
          build-wrapper-win-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} msbuild sonar_scanner_example.vcxproj /t:rebuild /nodeReuse:false
      - name: Build tests
        run: |
          msbuild test1\test1.vcxproj
          msbuild test2\test2.vcxproj
      - name: Run tests with coverage
        run: |
          "C:\Program Files\OpenCppCoverage\OpenCppCoverage.exe" --sources=. --output_coverage=Coverage.cov -- test1\test1.exe
          "C:\Program Files\OpenCppCoverage\OpenCppCoverage.exe" --sources=. --input_coverage=Coverage.cov -- test2\test2.exe
          "C:\Program Files\OpenCppCoverage\OpenCppCoverage.exe" --sources=. --input_coverage=Coverage.cov "--export_type=cobertura:${{ env.COVERAGE_RESULTS }}\cobertura.xml"
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }} # Put the name of your token here
        run: >
          sonar-scanner 
          --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"
          --define sonar.cfamily.cobertura.reportPaths="${{ env.COVERAGE_RESULTS }}/cobertura.xml"
